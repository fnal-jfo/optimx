//  =================================================================
//
//  Landau.cpp
//
//  This file is part of OptiMX, an interactive tool  
//  for beam optics design and analysis. 
//
//  Copyright (c) 2025 Fermi Forward Discovery Group, LLC.
//  This material was produced under U.S. Government contract
//  89243024CSC000002 for Fermi National Accelerator Laboratory (Fermilab),
//  which is operated by Fermi Forward Discovery Group, LLC for the
//  U.S. Department of Energy. The U.S. Government has rights to use,
//  reproduce, and distribute this software.
//
//  NEITHER THE GOVERNMENT NOR FERMI FORWARD DISCOVERY GROUP, LLC
//  MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY
//  LIABILITY FOR THE USE OF THIS SOFTWARE.
//
//  If software is modified to produce derivative works, such modified
//  software should be clearly marked, so as not to confuse it with the
//  version available from Fermilab.
//
//  Additionally, this program is free software; you can redistribute
//  it and/or modify it under the terms of the GNU General Public License
//  as published by the Free Software Foundation; either version 2
//  of the License, or (at your option) any later version. Accordingly,
//  this program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
//
//  See the GNU General Public License for more details.
//
//  https://www.gnu.org/licenses/old-licenses/gpl-2.0.html
//  https://www.gnu.org/licenses/gpl-3.0.html
//
//  =================================================================
//

#include <Landau.h>
#include <cmath>

static double f[] = {
    0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000,
   -2.2447330000,    -2.2043650000,    -2.1681630000,    -2.1352190000,    -2.1048980000,
   -2.0767400000,    -2.0503970000,    -2.0256050000,    -2.0021500000,    -1.9798660000,
   -1.9586120000,    -1.9382750000,    -1.9187600000,    -1.8999840000,    -1.8818790000,
   -1.8643850000,    -1.8474510000,    -1.8310300000,    -1.8150830000,    -1.7995740000,
   -1.7844730000,    -1.7697510000,    -1.7553830000,    -1.7413460000,    -1.7276200000,
   -1.7141870000,    -1.7010290000,    -1.6881300000,    -1.6754770000,    -1.6630570000,
   -1.6508580000,    -1.6388680000,    -1.6270780000,    -1.6154770000,    -1.6040580000,
   -1.5928110000,    -1.5817290000,    -1.5708060000,    -1.5600340000,    -1.5494070000,
   -1.5389190000,    -1.5285650000,    -1.5183390000,    -1.5082370000,    -1.4982540000,
   -1.4883860000,    -1.4786280000,    -1.4689760000,    -1.4594280000,    -1.4499790000,
   -1.4406260000,    -1.4313650000,    -1.4221950000,    -1.4131110000,    -1.4041120000,
   -1.3951940000,    -1.3863560000,    -1.3775940000,    -1.3689060000,    -1.3602910000,
   -1.3517460000,    -1.3432690000,    -1.3348590000,    -1.3265120000,    -1.3182290000,
   -1.3100060000,    -1.3018430000,    -1.2937370000,    -1.2856880000,    -1.2776930000,
   -1.2697520000,    -1.2618630000,    -1.2540240000,    -1.2462350000,    -1.2384940000,
   -1.2308000000,    -1.2231530000,    -1.2155500000,    -1.2079900000,    -1.2004740000,
   -1.1929990000,    -1.1855660000,    -1.1781720000,    -1.1708170000,    -1.1635000000,
   -1.1562200000,    -1.1489770000,    -1.1417700000,    -1.1345980000,    -1.1274590000,
   -1.1203540000,    -1.1132820000,    -1.1062420000,    -1.0992330000,    -1.0922550000,
   -1.0853060000,    -1.0783880000,    -1.0714980000,    -1.0646360000,    -1.0578020000,
   -1.0509960000,    -1.0442150000,    -1.0374610000,    -1.0307330000,    -1.0240290000,
   -1.0173500000,    -1.0106950000,    -1.0040640000,    -0.9974560000,    -0.9908710000,
   -0.9843080000,    -0.9777670000,    -0.9712470000,    -0.9647490000,    -0.9582710000,
   -0.9518130000,    -0.9453750000,    -0.9389570000,    -0.9325580000,    -0.9261780000,
   -0.9198160000,    -0.9134720000,    -0.9071460000,    -0.9008380000,    -0.8945470000,
   -0.8882720000,    -0.8820140000,    -0.8757730000,    -0.8695470000,    -0.8633370000,
   -0.8571420000,    -0.8509630000,    -0.8447980000,    -0.8386480000,    -0.8325120000,
   -0.8263900000,    -0.8202820000,    -0.8141870000,    -0.8081060000,    -0.8020380000,
   -0.7959820000,    -0.7899400000,    -0.7839090000,    -0.7778910000,    -0.7718840000,
   -0.7658890000,    -0.7599060000,    -0.7539340000,    -0.7479730000,    -0.7420230000,
   -0.7360840000,    -0.7301550000,    -0.7242370000,    -0.7183280000,    -0.7124290000,
   -0.7065410000,    -0.7006610000,    -0.6947910000,    -0.6889310000,    -0.6830790000,
   -0.6772360000,    -0.6714020000,    -0.6655760000,    -0.6597590000,    -0.6539500000,
   -0.6481490000,    -0.6423560000,    -0.6365700000,    -0.6307930000,    -0.6250220000,
   -0.6192590000,    -0.6135030000,    -0.6077540000,    -0.6020120000,    -0.5962760000,
   -0.5905480000,    -0.5848250000,    -0.5791090000,    -0.5733990000,    -0.5676950000,
   -0.5619970000,    -0.5563050000,    -0.5506180000,    -0.5449370000,    -0.5392620000,
   -0.5335920000,    -0.5279260000,    -0.5222660000,    -0.5166110000,    -0.5109610000,
   -0.5053150000,    -0.4996740000,    -0.4940370000,    -0.4884050000,    -0.4827770000,
   -0.4771530000,    -0.4715330000,    -0.4659170000,    -0.4603050000,    -0.4546970000,
   -0.4490920000,    -0.4434910000,    -0.4378930000,    -0.4322990000,    -0.4267070000,
   -0.4211190000,    -0.4155340000,    -0.4099510000,    -0.4043720000,    -0.3987950000,
   -0.3932210000,    -0.3876490000,    -0.3820800000,    -0.3765130000,    -0.3709490000,
   -0.3653870000,    -0.3598260000,    -0.3542680000,    -0.3487120000,    -0.3431570000,
   -0.3376040000,    -0.3320530000,    -0.3265030000,    -0.3209550000,    -0.3154080000,
   -0.3098630000,    -0.3043180000,    -0.2987750000,    -0.2932330000,    -0.2876920000,
   -0.2821520000,    -0.2766130000,    -0.2710740000,    -0.2655360000,    -0.2599990000,
   -0.2544620000,    -0.2489260000,    -0.2433890000,    -0.2378540000,    -0.2323180000,
   -0.2267830000,    -0.2212470000,    -0.2157120000,    -0.2101760000,    -0.2046410000,
   -0.1991050000,    -0.1935680000,    -0.1880320000,    -0.1824950000,    -0.1769570000,
   -0.1714190000,    -0.1658800000,    -0.1603410000,    -0.1548000000,    -0.1492590000,
   -0.1437170000,    -0.1381730000,    -0.1326290000,    -0.1270830000,    -0.1215370000,
   -0.1159890000,    -0.1104390000,    -0.1048890000,    -0.0993360000,    -0.0937820000,
   -0.0882270000,    -0.0826700000,    -0.0771110000,    -0.0715500000,    -0.0659870000,
   -0.0604230000,    -0.0548560000,    -0.0492880000,    -0.0437170000,    -0.0381440000,
   -0.0325690000,    -0.0269910000,    -0.0214110000,    -0.0158280000,    -0.0102430000,
   -0.0046560000,     0.0009340000,     0.0065270000,     0.0121230000,     0.0177220000,
    0.0233230000,     0.0289280000,     0.0345350000,     0.0401460000,     0.0457590000,
    0.0513760000,     0.0569970000,     0.0626200000,     0.0682470000,     0.0738770000,
    0.0795110000,     0.0851490000,     0.0907900000,     0.0964350000,     0.1020830000,
    0.1077360000,     0.1133920000,     0.1190520000,     0.1247160000,     0.1303850000,
    0.1360570000,     0.1417340000,     0.1474140000,     0.1531000000,     0.1587890000,
    0.1644830000,     0.1701810000,     0.1758840000,     0.1815920000,     0.1873040000,
    0.1930210000,     0.1987430000,     0.2044690000,     0.2102010000,     0.2159370000,
    0.2216780000,     0.2274250000,     0.2331770000,     0.2389330000,     0.2446960000,
    0.2504630000,     0.2562360000,     0.2620140000,     0.2677980000,     0.2735870000,
    0.2793820000,     0.2851830000,     0.2909890000,     0.2968010000,     0.3026190000,
    0.3084430000,     0.3142730000,     0.3201090000,     0.3259510000,     0.3317990000,
    0.3376540000,     0.3435150000,     0.3493820000,     0.3552550000,     0.3611350000,
    0.3670220000,     0.3729150000,     0.3788150000,     0.3847210000,     0.3906340000,
    0.3965540000,     0.4024810000,     0.4084150000,     0.4143560000,     0.4203040000,
    0.4262600000,     0.4322220000,     0.4381920000,     0.4441690000,     0.4501530000,
    0.4561450000,     0.4621440000,     0.4681510000,     0.4741660000,     0.4801880000,
    0.4862180000,     0.4922560000,     0.4983020000,     0.5043560000,     0.5104180000,
    0.5164880000,     0.5225660000,     0.5286530000,     0.5347470000,     0.5408500000,
    0.5469620000,     0.5530820000,     0.5592100000,     0.5653470000,     0.5714930000,
    0.5776480000,     0.5838110000,     0.5899830000,     0.5961640000,     0.6023550000,
    0.6085540000,     0.6147620000,     0.6209800000,     0.6272070000,     0.6334440000,
    0.6396890000,     0.6459450000,     0.6522100000,     0.6584840000,     0.6647680000,
    0.6710620000,     0.6773660000,     0.6836800000,     0.6900040000,     0.6963380000,
    0.7026820000,     0.7090360000,     0.7154000000,     0.7217750000,     0.7281600000,
    0.7345560000,     0.7409630000,     0.7473790000,     0.7538070000,     0.7602460000,
    0.7666950000,     0.7731550000,     0.7796270000,     0.7861090000,     0.7926030000,
    0.7991070000,     0.8056240000,     0.8121510000,     0.8186900000,     0.8252410000,
    0.8318030000,     0.8383770000,     0.8449620000,     0.8515600000,     0.8581700000,
    0.8647910000,     0.8714250000,     0.8780710000,     0.8847290000,     0.8913990000,
    0.8980820000,     0.9047780000,     0.9114860000,     0.9182060000,     0.9249400000,
    0.9316860000,     0.9384460000,     0.9452180000,     0.9520030000,     0.9588020000,
    0.9656140000,     0.9724390000,     0.9792780000,     0.9861300000,     0.9929960000,
    0.9998750000,     1.0067690000,     1.0136760000,     1.0205970000,     1.0275330000,
    1.0344820000,     1.0414460000,     1.0484240000,     1.0554170000,     1.0624240000,
    1.0694460000,     1.0764820000,     1.0835340000,     1.0906000000,     1.0976810000,
    1.1047780000,     1.1118890000,     1.1190160000,     1.1261590000,     1.1333160000,
    1.1404900000,     1.1476790000,     1.1548840000,     1.1621050000,     1.1693420000,
    1.1765950000,     1.1838640000,     1.1911490000,     1.1984510000,     1.2057700000,
    1.2131050000,     1.2204570000,     1.2278260000,     1.2352110000,     1.2426140000,
    1.2500340000,     1.2574710000,     1.2649260000,     1.2723980000,     1.2798880000,
    1.2873950000,     1.2949210000,     1.3024640000,     1.3100260000,     1.3176050000,
    1.3252030000,     1.3328190000,     1.3404540000,     1.3481080000,     1.3557800000,
    1.3634720000,     1.3711820000,     1.3789120000,     1.3866600000,     1.3944290000,
    1.4022160000,     1.4100240000,     1.4178510000,     1.4256980000,     1.4335650000,
    1.4414530000,     1.4493600000,     1.4572880000,     1.4652370000,     1.4732060000,
    1.4811960000,     1.4892080000,     1.4972400000,     1.5052930000,     1.5133680000,
    1.5214650000,     1.5295830000,     1.5377230000,     1.5458850000,     1.5540680000,
    1.5622750000,     1.5705030000,     1.5787540000,     1.5870280000,     1.5953250000,
    1.6036440000,     1.6119870000,     1.6203530000,     1.6287430000,     1.6371560000,
    1.6455930000,     1.6540530000,     1.6625380000,     1.6710470000,     1.6795810000,
    1.6881390000,     1.6967210000,     1.7053290000,     1.7139610000,     1.7226190000,
    1.7313030000,     1.7400110000,     1.7487460000,     1.7575060000,     1.7662930000,
    1.7751060000,     1.7839450000,     1.7928100000,     1.8017030000,     1.8106230000,
    1.8195690000,     1.8285430000,     1.8375450000,     1.8465740000,     1.8556310000,
    1.8647170000,     1.8738300000,     1.8829720000,     1.8921430000,     1.9013430000,
    1.9105720000,     1.9198300000,     1.9291170000,     1.9384340000,     1.9477810000,
    1.9571580000,     1.9665660000,     1.9760040000,     1.9854730000,     1.9949720000,
    2.0045030000,     2.0140650000,     2.0236590000,     2.0332850000,     2.0429430000,
    2.0526330000,     2.0623550000,     2.0721100000,     2.0818990000,     2.0917200000,
    2.1015750000,     2.1114640000,     2.1213860000,     2.1313430000,     2.1413340000,
    2.1513600000,     2.1614210000,     2.1715170000,     2.1816480000,     2.1918150000,
    2.2020180000,     2.2122570000,     2.2225330000,     2.2328450000,     2.2431950000,
    2.2535820000,     2.2640060000,     2.2744680000,     2.2849680000,     2.2955070000,
    2.3060840000,     2.3167010000,     2.3273560000,     2.3380510000,     2.3487860000,
    2.3595620000,     2.3703770000,     2.3812340000,     2.3921310000,     2.4030700000,
    2.4140510000,     2.4250730000,     2.4361380000,     2.4472460000,     2.4583970000,
    2.4695910000,     2.4808280000,     2.4921100000,     2.5034360000,     2.5148070000,
    2.5262220000,     2.5376840000,     2.5491900000,     2.5607430000,     2.5723430000,
    2.5839890000,     2.5956820000,     2.6074230000,     2.6192120000,     2.6310500000,
    2.6429360000,     2.6548710000,     2.6668550000,     2.6788900000,     2.6909750000,
    2.7031100000,     2.7152970000,     2.7275350000,     2.7398250000,     2.7521680000,
    2.7645630000,     2.7770120000,     2.7895140000,     2.8020700000,     2.8146810000,
    2.8273470000,     2.8400690000,     2.8528460000,     2.8656800000,     2.8785700000,
    2.8915180000,     2.9045240000,     2.9175880000,     2.9307120000,     2.9438940000,
    2.9571360000,     2.9704390000,     2.9838020000,     2.9972270000,     3.0107140000,
    3.0242630000,     3.0378750000,     3.0515510000,     3.0652900000,     3.0790950000,
    3.0929650000,     3.1069000000,     3.1209020000,     3.1349710000,     3.1491070000,
    3.1633120000,     3.1775850000,     3.1919280000,     3.2063400000,     3.2208240000,
    3.2353780000,     3.2500050000,     3.2647040000,     3.2794770000,     3.2943230000,
    3.3092440000,     3.3242400000,     3.3393120000,     3.3544610000,     3.3696870000,
    3.3849920000,     3.4003750000,     3.4158380000,     3.4313810000,     3.4470050000,
    3.4627110000,     3.4785000000,     3.4943720000,     3.5103280000,     3.5263700000,
    3.5424970000,     3.5587110000,     3.5750120000,     3.5914020000,     3.6078810000,
    3.6244500000,     3.6411110000,     3.6578630000,     3.6747080000,     3.6916460000,
    3.7086800000,     3.7258090000,     3.7430340000,     3.7603570000,     3.7777790000,
    3.7953000000,     3.8129210000,     3.8306450000,     3.8484700000,     3.8664000000,
    3.8844340000,     3.9025740000,     3.9208210000,     3.9391760000,     3.9576400000,
    3.9762150000,     3.9949010000,     4.0136990000,     4.0326120000,     4.0516390000,
    4.0707830000,     4.0900450000,     4.1094250000,     4.1289250000,     4.1485470000,
    4.1682920000,     4.1881600000,     4.2081540000,     4.2282750000,     4.2485240000,
    4.2689030000,     4.2894130000,     4.3100560000,     4.3308320000,     4.3517450000,
    4.3727940000,     4.3939820000,     4.4153100000,     4.4367810000,     4.4583950000,
    4.4801540000,     4.5020600000,     4.5241140000,     4.5463190000,     4.5686760000,
    4.5911870000,     4.6138540000,     4.6366780000,     4.6596620000,     4.6828070000,
    4.7061160000,     4.7295900000,     4.7532310000,     4.7770410000,     4.8010240000,
    4.8251790000,     4.8495110000,     4.8740200000,     4.8987100000,     4.9235820000,
    4.9486390000,     4.9738830000,     4.9993160000,     5.0249420000,     5.0507610000,
    5.0767780000,     5.1029930000,     5.1294110000,     5.1560340000,     5.1828640000,
    5.2099030000,     5.2371560000,     5.2646250000,     5.2923120000,     5.3202200000,
    5.3483540000,     5.3767140000,     5.4053060000,     5.4341310000,     5.4631930000,
    5.4924960000,     5.5220420000,     5.5518360000,     5.5818800000,     5.6121780000,
    5.6427340000,     5.6735520000,     5.7046340000,     5.7359860000,     5.7676100000,
    5.7995120000,     5.8316940000,     5.8641610000,     5.8969180000,     5.9299680000,
    5.9633160000,     5.9969670000,     6.0309250000,     6.0651940000,     6.0997800000,
    6.1346870000,     6.1699210000,     6.2054860000,     6.2413870000,     6.2776300000,
    6.3142200000,     6.3511630000,     6.3884650000,     6.4261300000,     6.4641660000,
    6.5025780000,     6.5413710000,     6.5805530000,     6.6201300000,     6.6601090000,
    6.7004950000,     6.7412970000,     6.7825200000,     6.8241730000,     6.8662620000,
    6.9087950000,     6.9517800000,     6.9952250000,     7.0391370000,     7.0835250000,
    7.1283980000,     7.1737640000,     7.2196320000,     7.2660110000,     7.3129100000,
    7.3603390000,     7.4083080000,     7.4568270000,     7.5059050000,     7.5555540000,
    7.6057850000,     7.6566080000,     7.7080350000,     7.7600770000,     7.8127470000,
    7.8660570000,     7.9200190000,     7.9746470000,     8.0299530000,     8.0859520000,
    8.1426570000,     8.2000830000,     8.2582450000,     8.3171580000,     8.3768370000,
    8.4373000000,     8.4985620000,     8.5606410000,     8.6235540000,     8.6873190000,
    8.7519550000,     8.8174810000,     8.8839160000,     8.9512820000,     9.0196000000,
    9.0888890000,     9.1591740000,     9.2304770000,     9.3028220000,     9.3762330000,
    9.4507350000,     9.5263550000,     9.6031180000,     9.6810540000,     9.7601910000,
    9.8405580000,     9.9221860000,    10.0051070000,    10.0893530000,    10.1749590000,
   10.2619580000,    10.3503890000,    10.4402870000,    10.5316930000,    10.6246460000,
   10.7191880000,    10.8153620000,    10.9132140000,    11.0127890000,    11.1141370000,
   11.2173070000,    11.3223520000,    11.4293250000,    11.5382830000,    11.6492850000,
   11.7623900000,    11.8776640000,    11.9951700000,    12.1149790000,    12.2371610000,
   12.3617910000,    12.4889460000,    12.6187080000,    12.7511610000,    12.8863940000,
   13.0244980000,    13.1655700000,    13.3097110000,    13.4570260000,    13.6076250000,
   13.7616250000,    13.9191450000,    14.0803140000,    14.2452630000,    14.4141340000,
   14.5870720000,    14.7642330000,    14.9457780000,    15.1318770000,    15.3227120000,
   15.5184700000,    15.7193530000,    15.9255700000,    16.1373450000,    16.3549120000,
   16.5785200000,    16.8084330000,    17.0449290000,    17.2883050000,    17.5388730000,
   17.7969670000,    18.0629430000,    18.3371760000,    18.6200680000,    18.9120490000,
   19.2135740000,    19.5251330000,    19.8472490000,    20.1804800000,    20.5254290000,
   20.8827380000,    21.2531020000,    21.6372660000,    22.0360360000,    22.4502780000,
   22.8809330000,    23.3290170000,    23.7956340000,    24.2819810000,    24.7893640000,
   25.3192070000,    25.8730620000,    26.4526340000,    27.0597890000,    27.6965810000,
   28.3652740000,    29.0683700000,    29.8086380000,    30.5891570000,    31.4133540000,
   32.2850600000,    33.2085680000,    34.1887050000,    35.2309200000,    36.3413880000,
   37.5271310000,    38.7961720000,    40.1577210000,    41.6223990000,    43.2025250000,
   44.9124650000,    46.7690770000,    48.7922790000,    51.0057730000,    53.4379960000,
   56.1233560000,    59.1038940000
};

// |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
// |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


Landau::Landau( std::function<double()> const& random )
  : random_(random)
{}

// |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
// |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Landau::~Landau()
{}
    
// |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
// |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


double Landau::operator()()
{
  //-----------------------------------------------------------------------------
  // Generator for the Normalized Landau Distribution
  //-----------------------------------------------------------------------------
  // G is a type for a uniform random generator.
  // Requirement: random() returns a uniformly distributed variate in [0.0,1.0] 
  // LandauRng returns a value (double) ranlan:  -infty < ranlan < infty.
  // The most probable value (mpv) is Landau(1.0), where Landau(x) is the pdf. 
  // Note: passing a generator as argument is useful for a cached RNG
  // implementation.
  //-----------------------------------------------------------------------------
  
  double x = random_();

  double  ip = 0.0; // ip: integer part 
  double   u = modf(1000*x, &ip); // u: fractional part   ip = integer part  

  int i  = ip;  //  0 << ip << 1000] 
  
  double ranlan = 0.0;
  if (( i >= 70) && (i<800)) {  
      ranlan = f[i-1] + u*(f[i]-f[i-1]);
  }
  else if (( i >=7) && (i <= 980)) {
    ranlan = f[i-1] + u*(f[i]-f[i-1] - 0.25*(1-u)*(f[i+1]-f[i]-f[i-1]+f[i-2]));
  }
  else if (i<7) {
    double v = log(x);
    u = 1.0/v;
    ranlan = ((0.99858950 + (34.5213058 + 17.0854528*u)*u)/(1.0+(34.1760202+4.01244582*u)*u))*(-log(-0.91893853-v)-1.0);
  }
  else {
    u        = 1.0-x;
    double v = u*u;
    ranlan   = (x < 0.999) ? (1.00060006+263.991156*u +4373.20068*v)/((1.0+257.368075*u+3414.48018*v)*u)
                           : (1.00001538 + 6075.14119*u + 734266.409*v)/((1.0+6065.11919*u +694021.044*v)*u); 
 }

  return ranlan;
}


//-----------------------------------------------------------------------------------------------------------------------------
//   test
// ------------------------------------------------------------------------------------------------------------------------------
#if  0

#include <random>
#include <iostream>
#include <gsl/gsl_rng.h>
#include <gsl/gsl_randist.h>


std::random_device rd;  // Will be used to obtain a seed for the random number engine
std::mt19937 gen(rd()); // generator: Standard mersenne_twister_engine seeded with rd()
std::uniform_real_distribution<> uniform(0.0, 1.0);
//--------------------------------------------------------------------------------------------------------------

int main(int argc, char* argv[])
{
  using Utility::LandauRng;
  
  double mpv   = 195.0;
  double sigma = 16.0;  

  int      n     = 1000000+1;   // no of samples
  int      nbins = 2000;        // no of bins 
  double   res   = 1.0;         // energy resolution.   

  //std::cout << " n     = " << n     << std::endl;
  //std::cout << " nbins = " << nbins << std::endl;

  const gsl_rng_type* T;
  gsl_rng_env_setup();
  T = gsl_rng_default;
  gsl_rng* r = gsl_rng_alloc (T);

  int histo[nbins];
  int histo2[nbins];
  std::fill(&histo[0], &histo[nbins], 0);
  std::fill(&histo2[0], &histo2[nbins], 0);
    
  for (int i = 0; i<n; ++i) {
    //    int ih  = mpv+sigma*LandauRng( [](){ return uniform(gen);});
    int ih  = mpv+sigma*LandauRng( [r](){ return gsl_rng_uniform(r); });
    int ih2 = mpv+sigma*gsl_ran_landau(r);

  if (ih >=nbins*res) continue; // discard anything greater  
    ++histo[ih];
  if (ih2 >=nbins*res) continue; // discard anything greater  
    ++histo2[ih2];
  }   

  for (int i=0; i<nbins; ++i) {
    std::cout << i << " " << histo[i] << " " << histo2[i] << std::endl;
  }

  gsl_rng_free (r);
  return 0;
}
#endif 
